#!/usr/bin/env bash

function usage() {
  cat <<EOF

Usage:

# kubectl gopass apply [optional kubectl apply params] my-secret
    applies secret "my-secret" via kubectl. Namespace and other params can be
    specified and are passed through to kubectl.

# kubectl gopass apply-recursive [optional kubectl apply params] my-secret-path
    like apply but takes a path and applies all secrets below that path

# kubectl gopass diff [optional kubectl apply params] my-secret
    shows the secret diff of "my-secret" via kubectl. Namespace and other 
    params can be specified and are passed through to kubectl.

# kubectl gopass apply-recursive [optional kubectl apply params] my-secret-path
    like diff but takes a path and applies all secrets below that path
    
# kubectl gopass create my-new-secret
    create a new secret prefilled with a kubernetes secret template and starts
    an editor to edit the newly created secret

# kubectl gopass version
    prints out the kubectl-gopass version
    
EOF
}

if [[ "$1" == "version" ]]; then
  echo "0.0.1"
  exit 0
fi

if [[ "$1" == "apply" ]]; then
  if [ "$#" -lt 2 ]; then
    echo "Too few arguments, secret is required"
    usage
    exit 1
  fi
  SECRET="${*: -1}"

  KUBECTL_ARGS=("$@")
  unset "KUBECTL_ARGS[${#KUBECTL_ARGS[@]}-1]"
  unset "KUBECTL_ARGS[0]"

  echo "will apply secret $SECRET with additional args '" "${KUBECTL_ARGS[@]}" "'"
  gopass show "$SECRET" | kubectl apply "${KUBECTL_ARGS[@]}" -f -

  exit 0
fi

if [[ "$1" == "apply-recursive" ]]; then
  if [ "$#" -lt 2 ]; then
    echo "Too few arguments, secret path is required"
    usage
    exit 1
  fi

  SECRETPATH="${*: -1}"

  KUBECTL_ARGS=("$@")
  unset "KUBECTL_ARGS[${#KUBECTL_ARGS[@]}-1]"
  unset "KUBECTL_ARGS[0]"

  IFS=$'\n'
  for SECRET in $(gopass ls -f "$SECRETPATH"); do
    echo "will apply secret $SECRET with additional args '" "${KUBECTL_ARGS[@]}" "'"
    gopass show "$SECRET" | kubectl apply "${KUBECTL_ARGS[@]}" -f -
  done
  exit 0
fi

if [[ "$1" == "diff" ]]; then
  if [ "$#" -lt 2 ]; then
    echo "Too few arguments, secret is required"
    usage
    exit 1
  fi
  SECRET="${*: -1}"

  KUBECTL_ARGS=("$@")
  unset "KUBECTL_ARGS[${#KUBECTL_ARGS[@]}-1]"
  unset "KUBECTL_ARGS[0]"

  gopass show "$SECRET" | kubectl diff "${KUBECTL_ARGS[@]}" -f -
  exit 0
fi

if [[ "$1" == "diff-recursive" ]]; then
  if [ "$#" -lt 2 ]; then
    echo "Too few arguments, secret path is required"
    usage
    exit 1
  fi
  SECRET="${*: -1}"

  KUBECTL_ARGS=("$@")
  unset "KUBECTL_ARGS[${#KUBECTL_ARGS[@]}-1]"
  unset "KUBECTL_ARGS[0]"

  gopass show "$SECRET" | kubectl diff "${KUBECTL_ARGS[@]}" -f -
  exit 0
fi

if [[ "$1" == "create" ]]; then
  if [ "$#" -lt 2 ]; then
    echo "Too few arguments, target secret is required"
    usage
    exit 1
  fi
  SECRETNAME=${*:(-1)}

  gopass insert "$SECRETNAME" <<EOL
apiVersion: v1
kind: Secret
metadata:
  name: ${SECRETNAME//\//-}
type: Opaque
stringData:
  key: value
  otherkey: othervalue
EOL
  gopass edit "$SECRETNAME"
  exit 0
fi

usage
exit 0
